---
# Grab CPU flags from `/proc/cpuinfo` and put the result into the
# `cpu_flags_cmd` variable.
- name: Get cpu flags
  ansible.builtin.command: >
    awk -F: '/^flags/ {print $2; exit}' /proc/cpuinfo
  register: cpu_flags_cmd

# Extract the flags into a list variable named `cpu_flags`.
- name: Set cpu flags fact
  ansible.builtin.set_fact:
    cpu_flags: "{{ cpu_flags_cmd.stdout.split() }}"

# Identify the processor manufacturer by looking for "Intel" or "AMD"
# in `/proc/cpuinfo`.
- name: check if Intel processor
  ansible.builtin.command: grep -q Intel /proc/cpuinfo
  ignore_errors: true
  register: is_intel

- name: check if AMD processor
  ansible.builtin.command: grep -q AMD /proc/cpuinfo
  ignore_errors: true
  register: is_amd

- name: Create /etc/cmdline.d directory
  become: true
  become_user: root
  ansible.builtin.file:
    path: /etc/cmdline.d
    state: directory
    mode: "0755"
  register: created_cmdline
  notify:
    - Regenerate initramfs

- name: Find UEFI partition
  ansible.builtin.command: 'cat /etc/fstab |grep efi | grep UUID | cut -f 2'
  register: uefi_path

- name: Create UEFI/EFI/Linux
  become: true
  become_user: root
  ansible.builtin.file:
    path: "{{ uefi_path.stdout | replace(' ', '') }}/EFI/Linux"
    state: directory
    mode: '0755'
  notify:
    - Regenerate initramfs

- name: Get boot device UUID
  ansible.builtin.command: "blkid -s UUID -o value {{ root_device }}"   # noqa: no-handler
  register: root_uuid

- name: Get swap device UUID
  ansible.builtin.shell: 'cat /etc/fstab | grep swap | grep "UUID" | cut -f 1'   # noqa: no-handler
  register: swap_uuid

- name: Populate kernel command line root file
  become: true
  become_user: root
  ansible.builtin.template:
    src: root.conf.j2
    dest: /etc/cmdline.d/root.conf
    mode: '0644'

- name: Populate kernel command line resume file
  become: true
  become_user: root
  ansible.builtin.template:
    src: resume.conf.j2
    dest: /etc/cmdline.d/resume.conf
    mode: '0644'

- name: Populate kernel command line plymouth file
  become: true
  become_user: root
  ansible.builtin.copy:
    src: plymouth.conf
    dest: /etc/cmdline.d
    mode: '0644'

- name: Populate kernel command line amd file
  become: true
  become_user: root
  ansible.builtin.copy:
    src: amd.conf
    dest: /etc/cmdline.d
    mode: '0644'
  when: is_amd

- name: Populate kernel command line kernel file
  become: true
  become_user: root
  ansible.builtin.copy:
    src: kernel.conf
    dest: /etc/cmdline.d
    mode: '0644'
