---
- name: Install contrib and pacutils
  become: true
  become_user: root
  community.general.pacman:
    name:
      - pacman-contrib
      - pacutils
    state: present

- name: Update pacman.conf to print color, ILoveCandy, and use 9 parallel downloads
  become: true
  become_user: root
  ansible.builtin.blockinfile:
    path: /etc/pacman.conf
    insertafter: "# Misc options"
    block: |
      Color
      ILoveCandy
      ParallelDownloads = 9
    marker: "# {mark} MISC OPTIONS ANSIBLE MANAGED BLOCK"
  register: base_pacman_part1

- name: Update extra
  become: true
  become_user: root
  ansible.builtin.blockinfile:
    path: /etc/pacman.conf
    insertafter: "\\[extra\\]"
    marker: "# {mark} extra ANSIBLE MANAGED BLOCK"
    block: |
      SigLevel = PackageRequired
  when: base_pacman_part1
  register: base_pacman_part2

- name: Update core
  become: true
  become_user: root
  ansible.builtin.blockinfile:
    path: /etc/pacman.conf
    insertafter: "\\[core\\]"
    marker: "# {mark} core ANSIBLE MANAGED BLOCK"
    block: |
      SigLevel = PackageRequired
  when: base_pacman_part2
  register: base_pacman_part3

- name: Update pacman.conf to enable multilib
  become: true
  become_user: root
  ansible.builtin.blockinfile:
    path: /etc/pacman.conf
    append_newline: true
    prepend_newline: true
    insertafter: "(?m)#\\[multilib\\]\n#Include = /etc/pacman.d/mirrorlist"
    marker: "# {mark} MULTILIB PREFERENCES ANSIBLE MANAGED BLOCK"
    block: |
      [multilib]
      SigLevel = PackageRequired
      Include = /etc/pacman.d/mirrorlist
  when:
    - base_pacman_part3
    - pacman_pacman.multilib
  register: base_pacman_complete

- name: Check if mirrorlist exists
  become: true
  become_user: root
  ansible.builtin.stat:
    path: /etc/pacman.d/mirrorlist
  register: mirrorlist_file

- name: Find faster mirrors with reflector
  become: true
  become_user: root
  ansible.builtin.command:
    cmd: reflector --latest 20 --sort rate --score 10 --country us --save /etc/pacman.d/mirrorlist
  when:
    - (not mirrorlist_file.stat.exists) or
      ((mirrorlist_file.stat.exists and mirrorlist_file.stat.isreg) and
      (not (lookup('ansible.builtin.file', '/etc/pacman.d/mirrorlist') | regex_search("Arch Linux mirrorlist generated by Reflector"))))
  changed_when: true

- name: Update repos
  become: true
  become_user: root
  community.general.pacman:
    update_cache: true
  when: pacman_pacman.update

- name: Upgrade packages
  become: true
  become_user: root
  community.general.pacman:
    upgrade: true
  when: pacman_pacman.upgrade
